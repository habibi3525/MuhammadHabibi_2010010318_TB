/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasi.gudang.lapar.chicken;

import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author habib
 */
public class laporan extends javax.swing.JFrame {
DefaultTableModel model; /**
     * Creates new form laporan
     */
    public laporan() {
        initComponents();

        
        String[] judul = {"Id_barang", "Nama barang", "Kategori barang", "Satuan barang"};
    model = new DefaultTableModel(judul, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return true; // Allow all cells to be editable
        }
    };
    tableBarang.setModel(model);
        tampilkanBarang();
        tampilkanTransaksi();
        
        tableBarang.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tabelMouseClicked(evt);
        }

            private void tabelMouseClicked(MouseEvent evt) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBarang = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTransaksi = new javax.swing.JTable();
        buttonCetak = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonKeluar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(250, 0, 0));

        tableBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableBarang);

        tableTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableTransaksi);

        buttonCetak.setText("Cetak Laporan");
        buttonCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCetakActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("LAPORAN DAFTAR NAMA BARANG");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("LAPORAN DAFTAR TRANSAKSI BARANG MASUK KELUAR");

        buttonKeluar.setText("Keluar");
        buttonKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonKeluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(buttonCetak)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonKeluar)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(100, 100, 100))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCetak)
                    .addComponent(buttonKeluar))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCetakActionPerformed
    // Tampilkan dialog pilihan ekspor
    String[] options = {"Ekspor Laporan Daftar Barang", "Ekspor Laporan Transaksi", "Batal"};
    int selectedOption = JOptionPane.showOptionDialog(this, "Pilih laporan yang akan diekspor:", "Ekspor Laporan", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

    switch (selectedOption) {
        case 0:
            // Ekspor laporan daftar barang ke CSV
            eksporKeCSV(tableBarang, "Laporan_Daftar_Barang.csv");
            break;
        case 1:
            // Ekspor laporan transaksi ke CSV
            eksporKeCSV(tableTransaksi, "Laporan_Transaksi.csv");
            break;
        default:
            // Batal
            break;
    }
}    

// Fungsi untuk ekspor tabel ke CSV
private void eksporKeCSV(javax.swing.JTable table, String namaFile) {
    try {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int rowCount = model.getRowCount();
        int columnCount = model.getColumnCount();

        // Buat string untuk menyimpan data CSV
        StringBuilder csvData = new StringBuilder();

        // Tulis header kolom
        for (int i = 0; i < columnCount; i++) {
            csvData.append(model.getColumnName(i));
            if (i < columnCount - 1) {
                csvData.append(",");
            }
        }
        csvData.append("\n");

        // Tulis data
        for (int i = 0; i < rowCount; i++) {
            for (int j = 0; j < columnCount; j++) {
                csvData.append(model.getValueAt(i, j));
                if (j < columnCount - 1) {
                    csvData.append(",");
                }
            }
            csvData.append("\n");
        }

        // Simpan data ke file CSV
        java.io.FileWriter writer = new java.io.FileWriter(namaFile);
        writer.write(csvData.toString());
        writer.close();

        JOptionPane.showMessageDialog(this, "Laporan berhasil diekspor ke " + namaFile, "Ekspor Berhasil", JOptionPane.INFORMATION_MESSAGE);
    } catch (java.io.IOException e) {
        JOptionPane.showMessageDialog(this, "Gagal menyimpan file: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }    // TODO add your handling code here:
    }//GEN-LAST:event_buttonCetakActionPerformed

    private void buttonKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonKeluarActionPerformed
    new beranda().setVisible(true);//membuka kembali halaman utama
        dispose();        // TODO add your handling code here:    // TODO add your handling code here:
    }//GEN-LAST:event_buttonKeluarActionPerformed

    /**
     * @param args the command line arguments
    */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(laporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new laporan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCetak;
    private javax.swing.JButton buttonKeluar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableBarang;
    private javax.swing.JTable tableTransaksi;
    // End of variables declaration//GEN-END:variables
private void tampilkanBarang() {
    int row = model.getRowCount();
    for (int a = 0; a < row; a++) {
        model.removeRow(0);
    }

    try {
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/gudang_lapar", "root", "");
        ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM tbarang");

        while (rs.next()) {
            String data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)};
            model.addRow(data);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Koneksi ke database gagal: " + ex.getMessage());
        Logger.getLogger(laporan.class.getName()).log(Level.SEVERE, null, ex);
    }
}

private void tampilkanTransaksi() {
    DefaultTableModel transaksiModel = (DefaultTableModel) tableTransaksi.getModel();
    transaksiModel.setRowCount(0);
    
    String[] kolom = {"Id Transaksi", "Id Barang", "Id Pemasok", "Jumlah", "Satuan", "Jenis Transaksi", "Waktu Transaksi"};
    transaksiModel.setColumnIdentifiers(kolom);

    try {
        Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/gudang_lapar", "root", "");
        ResultSet rs = cn.createStatement().executeQuery("SELECT * FROM ttransaksi");

        while (rs.next()) {
            String idTransaksi = rs.getString("id_transaksi");
            String idBarang = rs.getString("id_barang");
            String idPemasok = rs.getString("id_pemasok");
            String jumlah = rs.getString("jumlah");
            String satuan = rs.getString("satuan_barang");
            String jenisTransaksi = rs.getString("jenis_transaksi");
            String waktuTransaksi = rs.getString("waktu_transaksi");

            Object[] data = {idTransaksi, idBarang, idPemasok, jumlah, satuan, jenisTransaksi, waktuTransaksi};
            transaksiModel.addRow(data);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Koneksi ke database transaksi gagal: " + ex.getMessage());
        Logger.getLogger(laporan.class.getName()).log(Level.SEVERE, null, ex);
    }
}

}
